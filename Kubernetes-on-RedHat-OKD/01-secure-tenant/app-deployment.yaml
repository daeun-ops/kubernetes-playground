apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
  namespace: team-a
spec:
  replicas: 3
  selector:
    matchLabels: { app: app }
  template:
    metadata:
      labels: { app: app }
    spec:
      serviceAccountName: app-sa
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
          labelSelector: { matchLabels: { app: app } }
      containers:
        - name: app
          image: quay.io/prometheus/busybox:latest
          args: ["sh","-c","httpd -f -p 8080"]
          ports: [{ containerPort: 8080 }]
          readinessProbe:
            httpGet: { path: "/", port: 8080 }
            initialDelaySeconds: 3
          livenessProbe:
            httpGet: { path: "/", port: 8080 }
            initialDelaySeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: app-svc
  namespace: team-a
spec:
  selector: { app: app }
  ports:
    - name: http
      port: 80
      targetPort: 8080
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: app-pdb
  namespace: team-a
spec:
  minAvailable: 2
  selector:
    matchLabels: { app: app }
